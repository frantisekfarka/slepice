%grammar
%nsK {{ tex K^{n}{} }} , nL {{ tex L^{n}{} }} :: 'kind_nl_' ::= {{ com Locally Nameless Kinds }}
%  | typeK                ::   :: type                           {{ com kind of all types }} 
%  | Pi nTy . nK          ::   :: pi_intro                    {{ com kind of dependente functions }}
%  | ( nK )               :: S :: paren                        
%     {{ coq [[nK]] }}
%     {{ ocaml nK }}

grammar
sTy {{ tex T^{s}{} }}, sA {{ tex A^{s}{} }}, sB {{ tex B^{s}{} }} :: 'type_str_' ::= {{ com Structure of Types }}
  | Leaf                  ::   :: leaf                {{ com type constant }}
  | Pi sTy1 . sTy2        ::   :: pi_intro            {{ com type of dependent functions }}
  | sTy ste               ::   :: pi_elim             {{ com application of a type former }}
  | ( sTy )               :: S :: paren                        
     {{ coq [[sTy]] }}
%     {{ ocaml nTy }}

ste {{ tex t^s{} }}, sM {{ tex M^{s}{} }}, sN {{ tex N^{s}{} }} :: 'term_str_' ::= {{ com Structure of Terms }}
  | Leaf                  ::   :: leaf                {{ com term constant or index }} 
  | \ sTy . ste           ::   :: pi_intro            {{ com formation of $\Pi$ type }}
  | ste1 ste2             ::   :: pi_elim             {{ com application }}
  | ( ste )               :: S :: paren                        
     {{ coq [[ste]] }}
%     {{ ocaml nte }}

grammar
mstralgeq {{ tex \mathcal{M}_\Leftrightarrow^{s}{} }}, d :: 'stralgeq_' ::=
  | whr_l mstralgeq               ::   :: whr_l
  | whr_r mstralgeq               ::   :: whr_r
  | str mstralgeq                 ::   :: streq
  | eta_exp mstralgeq             ::   :: eta_exp
  | zeroc                         ::   :: zeroc
  | succ mstralgeq                ::   :: succ
  | con                           ::   :: con
  | pi_elim mstralgeq1 mstralgeq2 ::   :: pi_elim

%grammar
%nats {{ tex \mathbf{N} }} , d :: 'nats_' ::= {{ com nat }} {{ coq nat }}
%  | Z                     ::   :: zero
%    {{ coq 0 }}
%  | S nats                ::   :: succ
%    {{ coq (S [[nats]]) }}

